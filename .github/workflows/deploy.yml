name: Deploy to Local VirtualBox

on:
  push:
    branches:
      - feature/ci-cd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # 테스트 없이 빌드
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t fastcampusgroup6/accommodation:latest .

      - name: Push Docker image to Docker Hub
        run: docker push fastcampusgroup6/accommodation:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy Docker Compose file to remote server
        run: |
          scp -i ${{ secrets.VB_PRIVATE_KEY }} docker-compose.yml user@yusuengdo.ddns.net:/home/user/

      - name: Set environment variables on remote server
        run: |
          ssh -i ${{ secrets.VB_PRIVATE_KEY }} user@yusuengdo.ddns.net << 'EOF'
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> /home/user/.env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> /home/user/.env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> /home/user/.env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> /home/user/.env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> /home/user/.env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> /home/user/.env
          EOF

      - name: Deploy to VirtualBox
        run: |
          ssh -i ${{ secrets.VB_PRIVATE_KEY }} user@yusuengdo.ddns.net << 'EOF'
          cd /home/user/
          docker-compose --env-file .env pull
          docker-compose --env-file .env up -d
          EOF
